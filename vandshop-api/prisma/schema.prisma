// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String   @db.VarChar(200)
  address   String   @db.VarChar(200)
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
  password  String
  role      Role     @default(CASHIER)
  
}

enum Role {
ADMIN
CASHIER
}

model Category {
  id        Int @id @default(autoincrement()) 
  name      String   @db.VarChar(200)
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
  Product Product[]
}

model Sale {
  id         String     @id @default(cuid())
  total      Decimal    @db.Decimal(10,2)
  createdAt  DateTime   @default(now())
  items      SaleItem[]
}
model SaleItem {
  id         String   @id @default(cuid())
  saleId     String
  productId  String
  quantity   Int
  unitPrice  Decimal  @db.Decimal(10,2)
  lineTotal  Decimal  @db.Decimal(10,2)

  sale    Sale    @relation(fields: [saleId], references: [id])
  product Product @relation(fields: [productId], references: [id])
}

model Product {
  id            String  @id @default(cuid())
  name          String   @db.VarChar(200)
  price         Decimal  @db.Decimal(10,2)
  barcode       String?   @unique 
  sku           String?  @unique
  description   String  
  stock         Int      @default(0)
  categoryId    Int
  category      Category @relation(fields: [categoryId], references: [id])
  createdAt     DateTime @default(now())
  updateAt      DateTime @updatedAt
  ProductImage  ProductImage[]
  SaleItem      SaleItem[]
}

model ProductImage{
  id           Int      @id @default(autoincrement())
  url          String   
  productId    String      
  product      Product   @relation(fields: [productId], references: [id])
  createdAt    DateTime @default(now())
  updateAt     DateTime @updatedAt
}